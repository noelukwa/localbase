name: Build, Test, and Release

on:
  push:
    tags:
      - "v*"
    paths-ignore:
      - "**.md"
  pull_request:
    paths-ignore:
      - "**.md"

jobs:
  test:
    name: Test on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest]
    steps:
      - uses: actions/checkout@v3
      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: "1.21"
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.x"
      - name: Install Caddy
        run: |
          curl -sS https://webi.sh/caddy | sh
          echo "$HOME/.local/bin" >> $GITHUB_PATH
          export PATH="$PATH:$HOME/.local/bin"
      - name: Start Caddy
        run: caddy run &
      - name: Build localbase
        run: go build -o localbase
      - name: Start localbase
        run: ./localbase start -d
      - name: Create HTTP Server
        run: |
          echo "<html><body><h1>Hello, World!</h1></body></html>" > index.html
          python3 -m http.server 5000 &
      - name: Register Domain with LocalBase
        run: ./localbase add webapp --port 5000
        continue-on-error: true
      - name: Ping Registered Domain
        run: |
          curl -H "Host: webapp.local" http://localhost:5000
      - name: Stop LocalBase
        run: ./localbase stop

  build-and-release:
    name: Build and Release
    needs: test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: "1.21"
      - name: Install GoReleaser
        uses: goreleaser/goreleaser-action@v4
        with:
          install-only: true
      - name: Run GoReleaser
        run: goreleaser release --clean
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  build-macos:
    name: Build macOS (Intel and Apple Silicon)
    needs: test
    runs-on: macos-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: "1.21"
      - name: Build for macOS (Intel)
        run: GOOS=darwin GOARCH=amd64 go build -o localbase-darwin-amd64
      - name: Build for macOS (Apple Silicon)
        run: GOOS=darwin GOARCH=arm64 go build -o localbase-darwin-arm64
      - name: Upload macOS artifacts
        uses: actions/upload-artifact@v3
        with:
          name: macos-binaries
          path: |
            localbase-darwin-amd64
            localbase-darwin-arm64

  build-linux:
    name: Build Linux
    needs: test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: "1.21"
      - name: Build for Linux
        run: GOOS=linux GOARCH=amd64 go build -o localbase-linux-amd64
      - name: Upload Linux artifact
        uses: actions/upload-artifact@v3
        with:
          name: linux-binary
          path: localbase-linux-amd64
